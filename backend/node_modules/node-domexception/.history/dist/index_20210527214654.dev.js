"use strict";

/*! node-domexception. MIT License. Jimmy WÃ¤rting <https://jimmy.warting.se/opensource> */
if (!globalThis.DOMException) {
  try {
    var _require = require('worker_threads'),
        _MessageChannel = _require.MessageChannel,
        port = new _MessageChannel().port1,
        ab = new ArrayBuffer();

    port.postMessage(ab, [ab, ab]);
  } catch (err) {
    err.constructor.name === 'DOMException' && (globalThis.DOMException = err.constructor);
  }
}

module.exports = globalThis.DOMException;

var _require2 = require('worker_threads'),
    MessageChannel = _require2.MessageChannel;

function hello() {
  var port, ab;
  return regeneratorRuntime.async(function hello$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          port = new MessageChannel().port1;
          ab = new ArrayBuffer();
          port.postMessage(ab, [ab, ab]);

        case 3:
        case "end":
          return _context.stop();
      }
    }
  });
}

hello()["catch"](function (err) {
  console.assert(err.name === 'DataCloneError');
  console.assert(err.code === 21);
  console.assert(err instanceof DOMException);
});
var e1 = new DOMException('Something went wrong', 'BadThingsError');
console.assert(e1.name === 'BadThingsError');
console.assert(e1.code === 0);
var e2 = new DOMException('Another exciting error message', 'NoModificationAllowedError');
console.assert(e2.name === 'NoModificationAllowedError');
console.assert(e2.code === 7);
console.assert(DOMException.INUSE_ATTRIBUTE_ERR === 10);